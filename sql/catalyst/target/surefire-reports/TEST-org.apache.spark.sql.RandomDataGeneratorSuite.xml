<?xml version="1.0" encoding="UTF-8" ?>
<testsuite 
errors="0" failures="0" hostname="czp" name="org.apache.spark.sql.RandomDataGeneratorSuite" tests="389" time="2.989" timestamp="2020-01-07T15:05:03">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property 
    name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64">
</property>
    <property name="java.vm.version" value="25.232-b09"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property 
    name="java.vm.specification.name" value="Java Virtual Machine Specification">
</property>
    <property name="user.dir" value="/home/czp/workspace/Demo2/sql/catalyst"/>
    <property 
    name="java.runtime.version" value="1.8.0_232-8u232-b09-0ubuntu1~16.04.1-b09">
</property>
    <property name="spark.ui.enabled" value="false"/>
    <property 
    name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment">
</property>
    <property name="basedir" value="/home/czp/workspace/Demo2/sql/catalyst"/>
    <property 
    name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed">
</property>
    <property name="os.arch" value="amd64"/>
    <property 
    name="java.io.tmpdir" value="/home/czp/workspace/Demo2/sql/catalyst/target/tmp">
</property>
    <property name="derby.system.durability" value="test"/>
    <property name="line.separator" value=" "/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="io.netty.tryReflectionSetAccessible" value="true"/>
    <property 
    name="log4j.configuration" value="file:src/test/resources/log4j.properties">
</property>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="spark.ui.showConsoleProgress" value="false"/>
    <property 
    name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib">
</property>
    <property 
    name="java.specification.name" value="Java Platform API Specification">
</property>
    <property name="java.class.version" value="52.0"/>
    <property 
    name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers">
</property>
    <property name="os.version" value="4.15.0-72-generic"/>
    <property name="user.home" value="/home/czp"/>
    <property name="user.timezone" value=""/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="spark.testing" value="1"/>
    <property name="user.name" value="czp"/>
    <property 
    name="java.class.path" value="/home/czp/workspace/Demo2/sql/catalyst/target/scala-2.12/test-classes:/home/czp/workspace/Demo2/sql/catalyst/target/scala-2.12/classes:/home/czp/.m2/repository/org/scala-lang/scala-reflect/2.12.10/scala-reflect-2.12.10.jar:/home/czp/.m2/repository/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar:/home/czp/.m2/repository/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar:/home/czp/.m2/repository/org/apache/spark/spark-core_2.12/3.0.0-preview2/spark-core_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/home/czp/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar:/home/czp/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/czp/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/czp/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar:/home/czp/.m2/repository/org/tukaani/xz/1.5/xz-1.5.jar:/home/czp/.m2/repository/org/apache/avro/avro-mapred/1.8.2/avro-mapred-1.8.2-hadoop2.jar:/home/czp/.m2/repository/org/apache/avro/avro-ipc/1.8.2/avro-ipc-1.8.2.jar:/home/czp/.m2/repository/com/twitter/chill_2.12/0.9.3/chill_2.12-0.9.3.jar:/home/czp/.m2/repository/com/esotericsoftware/kryo-shaded/4.0.2/kryo-shaded-4.0.2.jar:/home/czp/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/czp/.m2/repository/com/twitter/chill-java/0.9.3/chill-java-0.9.3.jar:/home/czp/.m2/repository/org/apache/xbean/xbean-asm7-shaded/4.15/xbean-asm7-shaded-4.15.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-client/2.7.4/hadoop-client-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-common/2.7.4/hadoop-common-2.7.4.jar:/home/czp/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/czp/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/czp/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/czp/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/czp/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/czp/.m2/repository/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar:/home/czp/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/czp/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/czp/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/czp/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/czp/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/czp/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/czp/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-auth/2.7.4/hadoop-auth-2.7.4.jar:/home/czp/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar:/home/czp/.m2/repository/org/apache/httpcomponents/httpcore/4.4.12/httpcore-4.4.12.jar:/home/czp/.m2/repository/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar:/home/czp/.m2/repository/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar:/home/czp/.m2/repository/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar:/home/czp/.m2/repository/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar:/home/czp/.m2/repository/org/apache/curator/curator-client/2.7.1/curator-client-2.7.1.jar:/home/czp/.m2/repository/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.7.4/hadoop-hdfs-2.7.4.jar:/home/czp/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/czp/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar:/home/czp/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.4/hadoop-mapreduce-client-app-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.4/hadoop-mapreduce-client-common-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.7.4/hadoop-yarn-client-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-yarn-server-common/2.7.4/hadoop-yarn-server-common-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.4/hadoop-mapreduce-client-shuffle-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.7.4/hadoop-yarn-api-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.4/hadoop-mapreduce-client-core-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.7.4/hadoop-yarn-common-2.7.4.jar:/home/czp/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/czp/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/home/czp/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar:/home/czp/.m2/repository/org/codehaus/jackson/jackson-xc/1.9.13/jackson-xc-1.9.13.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.4/hadoop-mapreduce-client-jobclient-2.7.4.jar:/home/czp/.m2/repository/org/apache/hadoop/hadoop-annotations/2.7.4/hadoop-annotations-2.7.4.jar:/home/czp/.m2/repository/org/apache/spark/spark-launcher_2.12/3.0.0-preview2/spark-launcher_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/apache/spark/spark-kvstore_2.12/3.0.0-preview2/spark-kvstore_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/czp/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/czp/.m2/repository/org/apache/spark/spark-network-common_2.12/3.0.0-preview2/spark-network-common_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/apache/spark/spark-network-shuffle_2.12/3.0.0-preview2/spark-network-shuffle_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/javax/activation/activation/1.1.1/activation-1.1.1.jar:/home/czp/.m2/repository/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar:/home/czp/.m2/repository/org/apache/curator/curator-framework/2.7.1/curator-framework-2.7.1.jar:/home/czp/.m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar:/home/czp/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/czp/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/czp/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/czp/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/czp/.m2/repository/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar:/home/czp/.m2/repository/org/apache/commons/commons-text/1.6/commons-text-1.6.jar:/home/czp/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/home/czp/.m2/repository/org/slf4j/slf4j-api/1.7.16/slf4j-api-1.7.16.jar:/home/czp/.m2/repository/org/slf4j/jul-to-slf4j/1.7.16/jul-to-slf4j-1.7.16.jar:/home/czp/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.16/jcl-over-slf4j-1.7.16.jar:/home/czp/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/czp/.m2/repository/org/slf4j/slf4j-log4j12/1.7.16/slf4j-log4j12-1.7.16.jar:/home/czp/.m2/repository/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar:/home/czp/.m2/repository/org/xerial/snappy/snappy-java/1.1.7.3/snappy-java-1.1.7.3.jar:/home/czp/.m2/repository/org/lz4/lz4-java/1.7.0/lz4-java-1.7.0.jar:/home/czp/.m2/repository/com/github/luben/zstd-jni/1.4.4-3/zstd-jni-1.4.4-3.jar:/home/czp/.m2/repository/org/roaringbitmap/RoaringBitmap/0.7.45/RoaringBitmap-0.7.45.jar:/home/czp/.m2/repository/org/roaringbitmap/shims/0.7.45/shims-0.7.45.jar:/home/czp/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/czp/.m2/repository/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/home/czp/.m2/repository/org/json4s/json4s-jackson_2.12/3.6.6/json4s-jackson_2.12-3.6.6.jar:/home/czp/.m2/repository/org/json4s/json4s-core_2.12/3.6.6/json4s-core_2.12-3.6.6.jar:/home/czp/.m2/repository/org/json4s/json4s-ast_2.12/3.6.6/json4s-ast_2.12-3.6.6.jar:/home/czp/.m2/repository/org/json4s/json4s-scalap_2.12/3.6.6/json4s-scalap_2.12-3.6.6.jar:/home/czp/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/czp/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/czp/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/czp/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/czp/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/czp/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/czp/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/czp/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/czp/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/czp/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/czp/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/czp/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/czp/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/czp/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/czp/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/czp/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/czp/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/home/czp/.m2/repository/io/netty/netty-all/4.1.42.Final/netty-all-4.1.42.Final.jar:/home/czp/.m2/repository/com/clearspring/analytics/stream/2.9.6/stream-2.9.6.jar:/home/czp/.m2/repository/io/dropwizard/metrics/metrics-core/4.1.1/metrics-core-4.1.1.jar:/home/czp/.m2/repository/io/dropwizard/metrics/metrics-jvm/4.1.1/metrics-jvm-4.1.1.jar:/home/czp/.m2/repository/io/dropwizard/metrics/metrics-json/4.1.1/metrics-json-4.1.1.jar:/home/czp/.m2/repository/io/dropwizard/metrics/metrics-graphite/4.1.1/metrics-graphite-4.1.1.jar:/home/czp/.m2/repository/io/dropwizard/metrics/metrics-jmx/4.1.1/metrics-jmx-4.1.1.jar:/home/czp/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/czp/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.10.0/jackson-module-scala_2.12-2.10.0.jar:/home/czp/.m2/repository/com/fasterxml/jackson/module/jackson-module-paranamer/2.10.0/jackson-module-paranamer-2.10.0.jar:/home/czp/.m2/repository/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar:/home/czp/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/home/czp/.m2/repository/net/razorvine/pyrolite/4.30/pyrolite-4.30.jar:/home/czp/.m2/repository/net/sf/py4j/py4j/0.10.8.1/py4j-0.10.8.1.jar:/home/czp/.m2/repository/org/apache/commons/commons-crypto/1.0.0/commons-crypto-1.0.0.jar:/home/czp/.m2/repository/org/apache/spark/spark-core_2.12/3.0.0-preview2/spark-core_2.12-3.0.0-preview2-tests.jar:/home/czp/.m2/repository/org/apache/spark/spark-tags_2.12/3.0.0-preview2/spark-tags_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/apache/spark/spark-tags_2.12/3.0.0-preview2/spark-tags_2.12-3.0.0-preview2-tests.jar:/home/czp/.m2/repository/org/mockito/mockito-core/3.1.0/mockito-core-3.1.0.jar:/home/czp/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/czp/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.10/byte-buddy-agent-1.9.10.jar:/home/czp/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/home/czp/.m2/repository/org/apache/spark/spark-unsafe_2.12/3.0.0-preview2/spark-unsafe_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/apache/spark/spark-sketch_2.12/3.0.0-preview2/spark-sketch_2.12-3.0.0-preview2.jar:/home/czp/.m2/repository/org/scalacheck/scalacheck_2.12/1.14.2/scalacheck_2.12-1.14.2.jar:/home/czp/.m2/repository/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/home/czp/.m2/repository/org/codehaus/janino/janino/3.0.15/janino-3.0.15.jar:/home/czp/.m2/repository/org/codehaus/janino/commons-compiler/3.0.15/commons-compiler-3.0.15.jar:/home/czp/.m2/repository/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar:/home/czp/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/home/czp/.m2/repository/com/univocity/univocity-parsers/2.8.3/univocity-parsers-2.8.3.jar:/home/czp/.m2/repository/org/apache/arrow/arrow-vector/0.15.1/arrow-vector-0.15.1.jar:/home/czp/.m2/repository/org/apache/arrow/arrow-format/0.15.1/arrow-format-0.15.1.jar:/home/czp/.m2/repository/org/apache/arrow/arrow-memory/0.15.1/arrow-memory-0.15.1.jar:/home/czp/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/czp/.m2/repository/com/google/flatbuffers/flatbuffers-java/1.9.0/flatbuffers-java-1.9.0.jar:/home/czp/.m2/repository/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar:/home/czp/.m2/repository/org/scalatest/scalatest_2.12/3.0.8/scalatest_2.12-3.0.8.jar:/home/czp/.m2/repository/org/scalactic/scalactic_2.12/3.0.8/scalactic_2.12-3.0.8.jar:/home/czp/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/czp/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/czp/.m2/repository/com/novocode/junit-interface/0.11/junit-interface-0.11.jar">
</property>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property 
    name="sun.java.command" value="org.scalatest.tools.Runner -R /home/czp/workspace/Demo2/sql/catalyst/target/scala-2.12/classes /home/czp/workspace/Demo2/sql/catalyst/target/scala-2.12/test-classes -o -f /home/czp/workspace/Demo2/sql/catalyst/target/surefire-reports/SparkTestSuite.txt -u /home/czp/workspace/Demo2/sql/catalyst/target/surefire-reports/.">
</property>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_232"/>
    <property 
    name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext">
</property>
    <property 
    name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes">
</property>
    <property 
    name="spark.test.home" value="/home/czp/workspace/Demo2/sql/catalyst">
</property>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.awt.headless" value="true"/>
    <property name="file.separator" value="/"/>
    <property 
    name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/">
</property>
    <property name="spark.unsafe.exceptionOnMemoryLeak" value="true"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="test.src.tables" value="__not_used__"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase 
  name="StringType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.003">
</testcase>
  <testcase 
  name="StringType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="LongType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="LongType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="IntegerType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="IntegerType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="TimestampType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="TimestampType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="DoubleType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="DoubleType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="DateType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="DateType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="BinaryType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="BinaryType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="BooleanType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="BooleanType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ByteType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ByteType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="FloatType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="FloatType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ShortType (nullable=true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ShortType (nullable=false)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="ArrayType(ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="ArrayType(BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="ArrayType(DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="ArrayType(StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.04">
</testcase>
  <testcase 
  name="ArrayType(DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="ArrayType(DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(StringType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.025">
</testcase>
  <testcase 
  name="MapType(StringType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.015">
</testcase>
  <testcase 
  name="MapType(StringType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.02">
</testcase>
  <testcase 
  name="MapType(StringType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.021">
</testcase>
  <testcase 
  name="MapType(StringType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.026">
</testcase>
  <testcase 
  name="MapType(StringType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.015">
</testcase>
  <testcase 
  name="MapType(StringType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.028">
</testcase>
  <testcase 
  name="MapType(StringType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.02">
</testcase>
  <testcase 
  name="MapType(StringType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.026">
</testcase>
  <testcase 
  name="MapType(StringType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.017">
</testcase>
  <testcase 
  name="MapType(StringType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.02">
</testcase>
  <testcase 
  name="MapType(StringType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.032">
</testcase>
  <testcase 
  name="MapType(StringType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.02">
</testcase>
  <testcase 
  name="MapType(StringType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.019">
</testcase>
  <testcase 
  name="MapType(LongType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.022">
</testcase>
  <testcase 
  name="MapType(LongType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(LongType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.003">
</testcase>
  <testcase 
  name="MapType(LongType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.003">
</testcase>
  <testcase 
  name="MapType(LongType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(LongType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(LongType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(IntegerType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.039">
</testcase>
  <testcase 
  name="MapType(IntegerType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(IntegerType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(IntegerType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(IntegerType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(IntegerType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(IntegerType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(IntegerType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.013">
</testcase>
  <testcase 
  name="MapType(TimestampType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(TimestampType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(TimestampType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(TimestampType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(TimestampType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(TimestampType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(TimestampType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.02">
</testcase>
  <testcase 
  name="MapType(DoubleType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DoubleType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.013">
</testcase>
  <testcase 
  name="MapType(DateType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(DateType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(DateType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(DateType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(DateType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BinaryType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.011">
</testcase>
  <testcase 
  name="MapType(BinaryType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BinaryType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(BinaryType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.003">
</testcase>
  <testcase 
  name="MapType(BinaryType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.003">
</testcase>
  <testcase 
  name="MapType(BinaryType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(BinaryType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BinaryType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(BooleanType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(BooleanType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ByteType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.014">
</testcase>
  <testcase 
  name="MapType(ByteType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ByteType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ByteType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ByteType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(ByteType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ByteType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ByteType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(FloatType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.025">
</testcase>
  <testcase 
  name="MapType(FloatType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(FloatType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(FloatType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(FloatType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(FloatType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.002">
</testcase>
  <testcase 
  name="MapType(FloatType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(FloatType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,StringType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.037">
</testcase>
  <testcase 
  name="MapType(ShortType,LongType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,IntegerType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,DecimalType(20,5),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,TimestampType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,DoubleType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,DateType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,DecimalType(10,0),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,BinaryType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,BooleanType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,DecimalType(38,18),true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,ByteType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="MapType(ShortType,FloatType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="MapType(ShortType,ShortType,true)" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,StringType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,LongType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,IntegerType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(20,5),true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,TimestampType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DoubleType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DateType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(10,0),true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BinaryType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,BooleanType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,DecimalType(38,18),true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ByteType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,FloatType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,StringType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,LongType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,IntegerType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,DecimalType(20,5),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,TimestampType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,DoubleType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,DateType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,DecimalType(10,0),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,BinaryType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,BooleanType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,DecimalType(38,18),true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,ByteType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,FloatType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="StructType(StructField(a,ShortType,true), StructField(b,ShortType,true))" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <testcase 
  name="check size of generated map" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="2.248">
</testcase>
  <testcase 
  name="Use Float.NaN for all NaN values" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.001">
</testcase>
  <testcase 
  name="Use Double.NaN for all NaN values" classname="org.apache.spark.sql.RandomDataGeneratorSuite" time="0.0">
</testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
